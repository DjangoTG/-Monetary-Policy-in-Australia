---
title: "Examing the Effects of Monetary Policy on Regional Unemployment in Australia: A Structural Vector Autoregression Analysis"
author: "Django Trueman-Greinke"

execute:
  echo: false
  
bibliography: references.bib
---

> **Abstract.** Using data from the Australian Bureau of Statistics, this paper attempts to understand how changes in monetary policy impact unemployment levels in different Australian states using a Structural Vector Autoregression (SVAR) approach.

> **Keywords.** Monetary policy, Unemployement, Regional Effects, Impluse Response Function, Structural Vector Autoregressions, Australia \# Introduction

Intro in progress

Plots below

# Data

```{r Data}
#| echo: false
#| message: false
#| warning: false

library(lubridate)
library(kableExtra)

##Nominal GDP per capita
real.gdp <- readrba::read_rba(series_id = "GGDPCVGDP") 
real.gdp_temp <- xts::xts(real.gdp$value, real.gdp$date)

##Cash Rate Target
crt <- readrba::read_rba(series_id = "FOOIRATCR") 
crt_temp <- xts::xts(crt$value, crt$date)

##Money Supply
MS <- readrba::read_rba(series_id = "DMAM1N") 
MS_temp <- xts::xts(MS$value, MS$date)


##Consumer Price Index
CPI <- readrba::read_rba(series_id = "GCPIAG") 
CPI_temp <- xts::xts(CPI$value, CPI$date)



##QLD Unemployment Rate

UER.QLD <- readabs::read_abs(series_id = "A84423284T") 
UER.QLD_temp <- xts::xts(UER.QLD$value, UER.QLD$date - days(1))

##NSW Unemployment Rate

UER.NSW <- readabs::read_abs(series_id = "A84423270C") 
UER.NSW_temp <- xts::xts(UER.NSW$value, UER.NSW$date - days(1))

##VIC Unemployment Rate

UER.VIC <- readabs::read_abs(series_id = "A84423350C") 
UER.VIC_temp <- xts::xts(UER.VIC$value, UER.VIC$date - days(1))

##WA Unemployment Rate

UER.WA <- readabs::read_abs(series_id = "A84423322V") 
UER.WA_temp <- xts::xts(UER.WA$value, UER.WA$date - days(1))



Y <- as.data.frame(merge(real.gdp_temp,CPI_temp, crt_temp, MS_temp, UER.QLD_temp, UER.NSW_temp, UER.VIC_temp, UER.WA_temp))

names <- c("Real GDP","Consumer Price Index", "Cash Rate Target", "Money Supply", "Unemployment Rate: Queensland", "Unemployment Rate: New South Wales","Unemployment Rate: Victoria","Unemployment Rate: Western Australia")

Y <- na.omit(Y)[1:132,]

colnames(Y) <- names

```

The data required can all be taken directly from the Australian Bureau of Statistics who provide data from 1959 to 2022 on GDP, government spending, government revenue, and debt data from 1988. They also provide data relating to the Gini coefficient, however I am unable to find the series ID for this at present.

Below are plots of each of the available variables over time.

```{r plots}
#| echo: false
#| message: false
#| warning: false

dates <- as.Date(rownames(Y),format = "%Y-%m-%d")

units <- c("$ millions","", "", "", "Per cent per annum", "$ billion", "Percent", "Percent","Percent","Percent")

par(mfrow=c(2,2), mar=c(4,4,4,4))

for (i in 1:8){
  plot(dates, y=Y[,i], main = paste(names[i]), ylab = paste(units[i]),xlab = "Date",type = "l",col = "blue",lwd = 2)
  
}

```

# Preliminary Results

## ACF and PACF plots

```{r (P)ACF plots}



par(mfrow=c(2,2), mar=c(4,4,4,4))
for(i in 1:8){
  acf(Y[,i], main = paste(names[i]) )
pacf(Y[,i], main = paste(names[i]))
}

```

##Integration order verification

```{r Integration}
#| echo: false
#| message: false
#| warning: false

results.adf0 <- data.frame("Variable" = character(),"Lag Order" = numeric(), "ADF Statistic" = numeric(), "p value" = numeric())


for (i in 1:8){
adf = tseries::adf.test(Y[,i], k = 4)
results.adf0[i,1] <- paste(names[i])
results.adf0[i,2] <- adf[2]
results.adf0[i,3] <- adf[1]
results.adf0[i,4] <- adf[4]

}

results.adf1 <- data.frame("Variable" = character(),"Lag Order" = numeric(), "ADF Statistic" = numeric(), "p value" = numeric())
for (i in 1:8){
  if (results.adf0[i,4]>0.05 & results.adf0[i,4]<1){
diff_adf = tseries::adf.test(diff(Y[,i]), k = 3)
results.adf1[i,1] <- paste(names[i])
results.adf1[i,2] <- diff_adf[2]
results.adf1[i,3] <- diff_adf[1]
results.adf1[i,4] <- diff_adf[4]
  } else{
results.adf1[i,1] <- paste(names[i])
results.adf1[i,2] <- "N/A"
results.adf1[i,3] <- "N/A"
results.adf1[i,4] <- "N/A" }
}

results.adf2 <- data.frame("Variable" = character(),"Lag Order" = numeric(), "ADF Statistic" = numeric(), "p value" = numeric())
for (i in 1:8){
  if (results.adf1[i,4]>0.05 & results.adf1[i,4]<1){
diff_adf = tseries::adf.test(diff(diff(Y[,i])), k = 3)
results.adf2[i,1] <- paste(names[i])
results.adf2[i,2] <- diff_adf[2]
results.adf2[i,3] <- diff_adf[1]
results.adf2[i,4] <- diff_adf[4]
  }else{
results.adf2[i,1] <- paste(names[i])
results.adf2[i,2] <- "N/A"
results.adf2[i,3] <- "N/A"
results.adf2[i,4] <- "N/A" }
}

print(results.adf0)
print(results.adf1)
print(results.adf2)


```

# Methodology

Below is the Structural Vector Autoregression (SVAR) modelrequired to capture the dynamics between the variables.

\begin{align}
B_0 Y_t = b_0 + B_1 y_{t-1} +\dots +B_p y_{t-p} + u_t
\end{align} \begin{align}
u_t|Y_{t-1}~iid(0_N,I_N)
\end{align}

Where:

$Y_{t}$ is an $N\times 1$ vector of endogenous variables, including the Gini coefficient, government spending, revenue, GDP, and debt.

$B_0$ is an $N \times N$ structural matrix capturing comtemporaneous relationships between variables.

$u_t$ is an $N\times 1$ vector of independent structural shocks, conditional on $Y_{t-1}$.

Using this model I will give me an insight into dynamic relationships between government spending, revenue and income inequality. Impulse response functions and forecast error variance decompositions (FEVDs) will be used to analyse the effects of fiscal policy on income inequality.

Using both of these techniques together, I will gain an understanding of the long- and short-run impacts of shocks to government spending and taxation.

```{R modelling framework}

A.hat = matrix(1,2)
Sigma.hat = matrix(1, 1)

p = 2
N = 1

MLE <- c(A.hat, Sigma.hat)

calc.priors <- function(N, p, MLE){
  
  #Setting Kappas
  kappa.1 <- 0.02^2
  kappa.2 <-100
  K = 1 + (p*N)
  
  
  
  A.prior     = matrix(0,nrow(A.hat),ncol(A.hat))
  A.prior[2:(N+1),] = diag(N)
  V.prior     = diag(c(kappa.2,kappa.1*((1:p)^(-2))%x%rep(1,N)))
  S.prior     = diag(diag(Sigma.hat))
  nu.prior    = N+1
  
  priors <- c(A.prior, V.prior, S.prior, nu.prior)
  
  
  
  
  
  
  
  return(print(priors))
}

calc.priors(N = 1, p = 2, MLE = MLE)
















posteriors <- function (X, Y, priors){
  
  
  A.prior <- priors[1]
  V.prior <- priors[2]
  S.prior <- priors[3]
  nu.prior <- pr
  
  V.bar.inv   = t(X)%*%X + diag(1/diag(A.prior))
  V.bar       = solve(V.bar.inv)
  
  A.bar       = V.bar%*%(t(X)%*%Y + diag(1/diag(V.prior))%*%A.prior)
  nu.bar      = nrow(Y) + nu.prior
  
  S.bar       = S.prior + t(Y)%*%Y + t(A.prior)%*%diag(1/diag(V.prior))%*%A.prior - t(A.bar)%*%V.bar.inv%*%A.bar
  S.bar.inv   = solve(S.bar)
 
  
  post_temp = c(V.bar, A.bar, nu.bar)
  S.bar = priors[4] + (t(Y)%*%Y)+ (t(priors[2])%*%(1/priors[1])%*%priors[2]) - (t(post_temp[2])%*%(1/post_temp[1])%*%post_temp[2])
  
  posterior = c(V.bar, A.bar, nu.bar, S.bar)
  
  Sigma.posterior   = rWishart(S, df=nu.bar, Sigma=S.bar.inv)
Sigma.posterior   = apply(Sigma.posterior,3,solve)
Sigma.posterior   = array(Sigma.posterior,c(N,N,S))
A.posterior       = array(rnorm(prod(c(dim(A.bar),S))),c(dim(A.bar),S))
L                 = t(chol(V.bar))
for (s in 1:S){
  A.posterior[,,s]= A.bar + L%*%A.posterior[,,s]%*%chol(Sigma.posterior[,,s])
}
  
  
  return(print(posterior))
}


posteriors(X = X, Y = Y, priors = priors)


```
## References {.unnumbered}
